@using Admin.Models.OR;
@using Contract.Enum;
@using Contract.OR;
@model ORAnesthesiaModel
@{
    string errorMessage = ViewBag.ErrorMessage as string;
    var canCUDAction = Functions.CheckAllowAction("OR", "SaveORAnesthByJson");
    var canCUDAnesthEkip = Functions.CheckAllowAction("OR", "CUDAnesthEkip");
    var actionType = (int)ViewBag.ActionType;
    @*var listAnesthDoctors = Model.listEkips.Where(t => (t.PositionId == (int)ORPositionEnum.MainAnesthDoctor || t.PositionId == 0 || t.PositionId == (int)ORPositionEnum.SubAnesthDoctor)).ToList();
        var listNurses = Model.listEkips.Where(t => (t.PositionId == (int)ORPositionEnum.NurseOutRun1 || t.PositionId == (int)ORPositionEnum.NurseOutRun2 || t.PositionId == 0 || t.PositionId == (int)ORPositionEnum.NurseTool1 || t.PositionId == (int)ORPositionEnum.NurseTool2 || t.PositionId == (int)ORPositionEnum.AnesthNurse1 || t.PositionId == (int)ORPositionEnum.AnesthNurse2)).ToList();*@
    //vutv7 check trường hợp chỉ định quá hạn
    bool checkExprireMonth = false;
    if (Model.ChargeDetailId != null && Model.ChargeDate != null)
    {
        int ExprireMonth = Convert.ToInt16(System.Configuration.ConfigurationManager.AppSettings["ExprireMonth"].ToString());
        int months = (DateTime.Now.Year - Model.ChargeDate.Value.Year) * 12 + (DateTime.Now.Month - Model.ChargeDate.Value.Month);
        if (months > ExprireMonth)
        {
            checkExprireMonth = true;
        }
    }
}
<div id="main_wrapper">
    <div class="page_bar clearfix">
        <div class="row">
            <div class="col-md-5">
                <div class="">
                    <h1 class="page_title">PHÂN CÔNG & GHI NHẬN EKIP GÂY MÊ</h1>
                    <span class="text-muted"></span>
                </div>
            </div>
        </div>
    </div>
    @*<form class="frmCUDInPatientReport" id="frmPopUp" method="post">*@
    <div class="page_content" style="padding-bottom:10px;">
        <div class="bg_page_fix"><i class="fa fa-users"></i></div>
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            @if (string.IsNullOrEmpty(errorMessage) == false)
                            {
                                @Html.Partial("_ErrorOccur", errorMessage)
                            }
                            else if (Model == null)
                            {
                                @Html.Partial("_ErrorOccur", LayoutResource.Shared_NoRowFound)
                            }
                            else
                            {
                                @Html.AntiForgeryToken()
                                @Html.Hidden("VisitCode", Model.VisitCode)
                                @Html.Hidden("PId", Model.PId)
                                @Html.Hidden("HoTen", Model.HoTen)
                                @Html.Hidden("Ages", Model.Ages)

                                @Html.Hidden("HospitalCode", Model.HospitalCode)
                                @Html.Hidden("HospitalName", Model.HospitalName)
                                @Html.Hidden("Address", Model.Address)
                                @Html.Hidden("Email", Model.Email)
                                @Html.Hidden("PatientPhone", Model.PatientPhone)
                                @Html.Hidden("Id", Model.Id)

                                @Html.Hidden("HpServiceName", Model.HpServiceName)
                                @Html.Hidden("ORRoomName", Model.ORRoomName)
                                @Html.Hidden("OrderID", Model.OrderID)
                                @Html.Hidden("ChargeDetailId", Model.ChargeDetailId)
                                @Html.Hidden("DepartmentCode", Model.DepartmentCode)
                                @Html.Hidden("AdmissionWard", Model.AdmissionWard)
                                @*@Html.Hidden("ChargeDate", Model.ChargeDate)*@
                                @Html.Hidden("ChargeDate", Model.ChargeDateStr)
                                @Html.Hidden("ChargeBy", Model.ChargeBy)
                                @Html.Hidden("ChargesReplaceCount", Model.ChargesReplace.Count())
                                @Html.Hidden("checkExprireMonth", checkExprireMonth)
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="row">
                                            <div class="col-lg-6">
                                                <h3 class="heading_a" style="color:#32c69a">THÔNG TIN BỆNH NHÂN</h3>
                                            </div>
                                            <div class="col-lg-6" style="text-align:right;">
                                                <!-- Bootstrap Radio Button Group -->
                                                <div class="btn-group lockhover" role="group">
                                                    <input type="radio" name="surgeryType" class="btn-check" value="1" checked="@(Model.SurgeryType == 1)" disabled id="radMoPhien">
                                                    <label class="btn btn-outline-primary btn-with-border" for="radMoPhien">Mổ phiên</label>

                                                    <input type="radio" name="surgeryType" class="btn-check" value="2" checked="@(Model.SurgeryType == 2)" disabled id="radMoCapCuu">
                                                    <label class="btn btn-outline-primary btn-with-border" for="radMoCapCuu">Mổ cấp cứu</label>

                                                    <input type="radio" name="surgeryType" class="btn-check" value="3" checked="@(Model.SurgeryType == 3)" disabled id="radThuThuat">
                                                    <label class="btn btn-outline-primary btn-with-border" for="radThuThuat">Thủ thuật</label>
                                                </div>
                                            </div>
                                        </div>
                                        <address>
                                            <p class="addres_name">
                                                <div class="row">
                                                    <div class="col-md-3">
                                                        <label>PID</label>
                                                        @Model.PId
                                                    </div>
                                                    <div class="col-sm-2">
                                                        <label>Họ và tên bệnh nhân </label>
                                                        @Model.HoTen
                                                    </div>
                                                    <div class="col-sm-1 div_input_form_control_label">
                                                        <label>Tuổi</label>
                                                        @(Model.Ages ?? "unknown")
                                                    </div>
                                                    <div class="col-md-1 div_input_form_control_label">
                                                        <label>Giới tính</label>
                                                        <span class="text-normal">@(EnumExtension.GetDescription((SexTypeEnum)Model.Sex))</span>
                                                    </div>
                                                    <div class="col-md-1 div_input_form_control_label">
                                                        <label>Ngày sinh</label>
                                                        <span class="text-normal">@Model.ShowNgaySinh</span>
                                                    </div>
                                                    <div class="col-md-2 div_input_form_control_label">
                                                        <label>Công ty PL</label>
                                                        <span class="text-normal">@Model.HospitalName</span>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-3">
                                                        <label>Tên dịch vụ mổ</label>
                                                        @Model.HpServiceName
                                                    </div>
                                                    <div class="col-sm-2">
                                                        <label>Phòng mỗ yêu cầu </label>
                                                        @Model.ORRoomName
                                                    </div>
                                                    <div class="col-md-1 div_input_form_control_label">
                                                        <label>Thời gian gây mê</label>
                                                        @Model.TimeAnesth
                                                    </div>
                                                    <div class="col-sm-1 div_input_form_control_label">
                                                        <label>Thời gian bắt đầu</label>
                                                        @(Model.ShowdtStart)
                                                    </div>
                                                    <div class="col-md-1 div_input_form_control_label">
                                                        <label>Ngày kết thúc</label>
                                                        <span class="text-normal">@Model.ShowdtEnd</span>
                                                    </div>

                                                    <div class="col-md-2 div_input_form_control_label">
                                                        <label>Ngày thực hiện ca mổ</label>
                                                        <span class="text-normal">@Model.ShowdtOperation</span>
                                                    </div>

                                                </div>

                                                <div class="row">
                                                    <div class="col-md-3">
                                                        <label>Họ tên bs đặt mổ</label>
                                                        @Model.NameCreatedBy
                                                    </div>
                                                    <div class="col-sm-2">
                                                        <label>Email</label>
                                                        @Model.EmailCreatedBy
                                                    </div>
                                                    <div class="col-md-1 div_input_form_control_label">
                                                        <label>Chức danh</label>
                                                        @Model.PositionCreatedBy
                                                    </div>
                                                    <div class="col-sm-1 div_input_form_control_label">
                                                        <label>Điện thoại</label>
                                                        @(Model.PhoneCreatedBy)
                                                    </div>
                                                </div>

                                                @*vutv7*@
                                                @if (Model.ChargeDate != null && !string.IsNullOrEmpty(Model.ChargeBy))
                                                {
                                                    <div class="row">
                                                        <div class="col-md-3">
                                                            <label>Ngày chỉ định</label>
                                                            @Model.ChargeDate.Value.ToString("dd/MM/yyyy HH:mm")
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <label>Người chỉ định</label>
                                                            @Model.ChargeBy
                                                        </div>
                                                    </div>
                                                }
                                            </p>
                                        </address>
                                    </div>
                                </div>

                                <div class="row">

                                    <div class="col-sm-12">
                                        <h3 class="heading_a" style="color:#32c69a">DANH SÁCH THÀNH VIÊN TRONG EKIP ĐƯỢC ĐIỀU PHỐI THAM GIA GÂY MÊ</h3>
                                        <address>
                                            <p class="addres_name">

                                                <div class="row">
                                                    <table class="table table-striped">
                                                        <thead>
                                                            <tr>
                                                                <th class="col_md" style="text-align:left;max-width:5px;">Vai trò</th>
                                                                <th class="col_md sub_col">Họ và tên</th>
                                                                <th class="col_md sub_col">Địa chỉ Email </th>
                                                                <th class="col_md sub_col">Điện thoại</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody id="bodyEkip">
                                                            <!--1-->
                                                            <tr>
                                                                <td class="text-left col-sm-3" style="max-width:10px;">
                                                                    <span class="text-center" style="font-weight:bold;color:red">Bác sĩ gây mê</span>
                                                                </td>
                                                                <td class="sub_col" style="text-align:left;" width="100px;">
                                                                    @{
                                                                        var dataMainAnesthDoctors = Model.listEkips.Where(t => (t.PositionId == (int)ORPositionEnum.MainAnesthDoctor) || t.PositionId == 0).Select(c => new SelectListItemCustom()
                                                                        {
                                                                            Selected = (Model.UIdMainAnesthDoctor == c.Id),
                                                                            Value = c.Id.ToString(),
                                                                            Text = !string.IsNullOrEmpty(c.Name) ? c.Name + " (" + c.Username + ")" : c.Name,
                                                                            itemsHtmlAttributes = new Dictionary<string, string> { { "Email", c.Email }, { "Phone", c.Phone }, { "Position", c.PositionName } }
                                                                        }).ToList();
                                                                        @Html.Raw(Html.DropDownListForCustomExt("UIdMainAnesthDoctor", dataMainAnesthDoctors, new { @class = "form-control select2 select2-offscreen", tabindex = "6", onchange = "ChangeMainAnesthDoctor(this);" }))
                                                                        @Html.ValidationMessageFor(x => x.UIdMainAnesthDoctor)
                                                                    }
                                                                </td>
                                                                <td class="sub_col col-sm-3" style="text-align:left;">
                                                                    @Html.TextBoxFor(x => x.EmailMainAnesthDoctor, new { @class = "form-control", @onchange = "editEmailOrPhone(this,'email');", @onkeyup = "editEmailOrPhone(this,'email');" })
                                                                </td>
                                                                <td class="sub_col col-sm-3" style="text-align:left;">
                                                                    @Html.TextBoxFor(x => x.PhoneMainAnesthDoctor, new { @class = "form-control", @onchange = "editEmailOrPhone(this,'phone');", @onkeyup = "editEmailOrPhone(this,'phone');" })
                                                                </td>
                                                            </tr>
                                                            <!--2-->
                                                            <tr>
                                                                <td class="text-left">
                                                                    <span class="text-center" style="font-weight:bold;">Bác sĩ phụ mê 1</span>
                                                                </td>
                                                                <td class="sub_col" style="text-align:left;" text>
                                                                    @{
                                                                        var dataSubAnesthDoctors = Model.listEkips.Where(t => (t.PositionId == (int)ORPositionEnum.SubAnesthDoctor) || t.PositionId == 0).Select(c => new SelectListItemCustom()
                                                                        {
                                                                            Selected = (Model.UIdSubAnesthDoctor == c.Id),
                                                                            Value = c.Id.ToString(),
                                                                            Text = !string.IsNullOrEmpty(c.Name) ? c.Name + " (" + c.Username + ")" : c.Name,
                                                                            itemsHtmlAttributes = new Dictionary<string, string> { { "Email", c.Email }, { "Phone", c.Phone }, { "Position", c.PositionName } }
                                                                        }).ToList();

                                                                        @Html.Raw(Html.DropDownListForCustomExt("UIdSubAnesthDoctor", dataSubAnesthDoctors, new { @class = "form-control select2 select2-offscreen", tabindex = "6", onchange = "ChangeSubAnesthDoctor(this);" }))
                                                                        @Html.ValidationMessageFor(x => x.UIdSubAnesthDoctor)
                                                                    }
                                                                </td>
                                                                <td class="sub_col col-sm-3" style="text-align:left;">
                                                                    @Html.TextBoxFor(x => x.EmailSubAnesthDoctor, new { @class = "form-control", @onchange = "editEmailOrPhone(this,'email');", @onkeyup = "editEmailOrPhone(this,'email');" })
                                                                </td>
                                                                <td class="sub_col col-sm-3" style="text-align:left;">
                                                                    @Html.TextBoxFor(x => x.PhoneSubAnesthDoctor, new { @class = "form-control", @onchange = "editEmailOrPhone(this,'phone');", @onkeyup = "editEmailOrPhone(this,'phone');" })
                                                                </td>
                                                            </tr>

                                                            <!--2-->
                                                            <tr>
                                                                <td class="text-left">
                                                                    <span class="text-center" style="font-weight:bold;">Bác sĩ phụ mê 2</span>
                                                                </td>
                                                                <td class="sub_col" style="text-align:left;" text>
                                                                    @{
                                                                        var dataSubAnesthDoctors2 = Model.listEkips.Where(t => (t.PositionId == (int)ORPositionEnum.SubAnesthDoctor2) || t.PositionId == 0).Select(c => new SelectListItemCustom()
                                                                        {
                                                                            Selected = (Model.UIdSubAnesthDoctor2 == c.Id),
                                                                            Value = c.Id.ToString(),
                                                                            Text = !string.IsNullOrEmpty(c.Name) ? c.Name + " (" + c.Username + ")" : c.Name,
                                                                            itemsHtmlAttributes = new Dictionary<string, string> { { "Email", c.Email }, { "Phone", c.Phone }, { "Position", c.PositionName } }
                                                                        }).ToList();

                                                                        @Html.Raw(Html.DropDownListForCustomExt("UIdSubAnesthDoctor2", dataSubAnesthDoctors2, new { @class = "form-control select2 select2-offscreen", tabindex = "6", onchange = "ChangeSubAnesthDoctor2(this);" }))
                                                                        @Html.ValidationMessageFor(x => x.UIdSubAnesthDoctor2)
                                                                    }
                                                                </td>
                                                                <td class="sub_col col-sm-3" style="text-align:left;">
                                                                    @Html.TextBoxFor(x => x.EmailSubAnesthDoctor2, new { @class = "form-control", @onchange = "editEmailOrPhone(this,'email');", @onkeyup = "editEmailOrPhone(this,'email');" })
                                                                </td>
                                                                <td class="sub_col col-sm-3" style="text-align:left;">
                                                                    @Html.TextBoxFor(x => x.PhoneSubAnesthDoctor2, new { @class = "form-control", @onchange = "editEmailOrPhone(this,'phone');", @onkeyup = "editEmailOrPhone(this,'phone');" })
                                                                </td>
                                                            </tr>

                                                            <!--2-->
                                                            <tr>
                                                                <td class="text-left">
                                                                    <span class="text-center" style="font-weight:bold;">BS khám gây mê</span>
                                                                </td>
                                                                <td class="sub_col" style="text-align:left;" text>
                                                                    @{
                                                                        var dataAnesthesiologist = Model.listEkips.Where(t => (t.PositionId == (int)ORPositionEnum.Anesthesiologist) || t.PositionId == 0).Select(c => new SelectListItemCustom()
                                                                        {
                                                                            Selected = (Model.UIdAnesthesiologist == c.Id),
                                                                            Value = c.Id.ToString(),
                                                                            Text = !string.IsNullOrEmpty(c.Name) ? c.Name + " (" + c.Username + ")" : c.Name,
                                                                            itemsHtmlAttributes = new Dictionary<string, string> { { "Email", c.Email }, { "Phone", c.Phone }, { "Position", c.PositionName } }
                                                                        }).ToList();

                                                                        @Html.Raw(Html.DropDownListForCustomExt("UIdAnesthesiologist", dataAnesthesiologist, new { @class = "form-control select2 select2-offscreen", tabindex = "6", onchange = "ChangeAnesthesiologist(this);" }))
                                                                        @Html.ValidationMessageFor(x => x.UIdAnesthesiologist)
                                                                    }
                                                                </td>
                                                                <td class="sub_col col-sm-3" style="text-align:left;">
                                                                    @Html.TextBoxFor(x => x.EmailAnesthesiologist, new { @class = "form-control", @onchange = "editEmailOrPhone(this,'email');", @onkeyup = "editEmailOrPhone(this,'email');" })
                                                                </td>
                                                                <td class="sub_col col-sm-3" style="text-align:left;">
                                                                    @Html.TextBoxFor(x => x.PhoneAnesthesiologist, new { @class = "form-control", @onchange = "editEmailOrPhone(this,'phone');", @onkeyup = "editEmailOrPhone(this,'phone');" })
                                                                </td>
                                                            </tr>

                                                            <!--3-->
                                                            <tr>
                                                                <td class="text-left">
                                                                    <span class="text-center" style="font-weight:bold;color:red">Điều dưỡng phụ mê 1</span>
                                                                </td>
                                                                <td class="sub_col" style="text-align:left;" text>
                                                                    @{
                                                                        var dataAnesthNurse1 = Model.listEkips.Where(t => (t.PositionId == (int)ORPositionEnum.AnesthNurse1) || t.PositionId == 0).Select(c => new SelectListItemCustom()
                                                                        {
                                                                            Selected = (Model.UIdAnesthNurse1 == c.Id),
                                                                            Value = c.Id.ToString(),
                                                                            Text = !string.IsNullOrEmpty(c.Name) ? c.Name + " (" + c.Username + ")" : c.Name,
                                                                            itemsHtmlAttributes = new Dictionary<string, string> { { "Email", c.Email }, { "Phone", c.Phone }, { "Position", c.PositionName } }
                                                                        }).ToList();

                                                                        @Html.Raw(Html.DropDownListForCustomExt("UIdAnesthNurse1", dataAnesthNurse1, new { @class = "form-control select2 select2-offscreen", tabindex = "6", onchange = "ChangeAnesthNurse1(this);" }))
                                                                        @Html.ValidationMessageFor(x => x.UIdAnesthNurse1)
                                                                    }
                                                                </td>
                                                                <td class="sub_col col-sm-3" style="text-align:left;">
                                                                    @Html.TextBoxFor(x => x.EmailAnesthNurse1, new { @class = "form-control", @onchange = "editEmailOrPhone(this,'email');", @onkeyup = "editEmailOrPhone(this,'email');" })
                                                                </td>
                                                                <td class="sub_col col-sm-3" style="text-align:left;">
                                                                    @Html.TextBoxFor(x => x.PhoneAnesthNurse1, new { @class = "form-control", @onchange = "editEmailOrPhone(this,'phone');", @onkeyup = "editEmailOrPhone(this,'phone');" })
                                                                </td>
                                                            </tr>
                                                            <!--4-->
                                                            <tr>

                                                                <td class="text-left">
                                                                    <span class="text-center" style="font-weight:bold;">Điều dưỡng phụ mê 2</span>
                                                                </td>
                                                                <td class="sub_col" style="text-align:left;" text>
                                                                    @{
                                                                        var dataAnesthNurse2s = Model.listEkips.Where(t => (t.PositionId == (int)ORPositionEnum.AnesthNurse2) || t.PositionId == 0).Select(c => new SelectListItemCustom()
                                                                        {
                                                                            Selected = (Model.UIdAnesthNurse2 == c.Id),
                                                                            Value = c.Id.ToString(),
                                                                            Text = !string.IsNullOrEmpty(c.Name) ? c.Name + " (" + c.Username + ")" : c.Name,
                                                                            itemsHtmlAttributes = new Dictionary<string, string> { { "Email", c.Email }, { "Phone", c.Phone }, { "Position", c.PositionName } }
                                                                        }).ToList();

                                                                        @Html.Raw(Html.DropDownListForCustomExt("UIdAnesthNurse2", dataAnesthNurse2s, new { @class = "form-control select2 select2-offscreen", tabindex = "6", onchange = "ChangeAnesthNurse2(this);" }))
                                                                        @Html.ValidationMessageFor(x => x.UIdAnesthNurse2)
                                                                    }
                                                                </td>
                                                                <td class="sub_col col-sm-3" style="text-align:left;">
                                                                    @Html.TextBoxFor(x => x.EmailAnesthNurse2, new { @class = "form-control", @onchange = "editEmailOrPhone(this,'email');", @onkeyup = "editEmailOrPhone(this,'email');" })
                                                                </td>
                                                                <td class="sub_col col-sm-3" style="text-align:left;">
                                                                    @Html.TextBoxFor(x => x.PhoneAnesthNurse2, new { @class = "form-control", @onchange = "editEmailOrPhone(this,'phone');", @onkeyup = "editEmailOrPhone(this,'phone');" })
                                                                </td>
                                                            </tr>
                                                            <!--5-->
                                                            <tr>

                                                                <td class="text-left">
                                                                    <span class="text-center" style="font-weight:bold;">Điều dưỡng hồi tỉnh</span>
                                                                </td>
                                                                <td class="sub_col" style="text-align:left;" text>
                                                                    @{
                                                                        var dataAnesthNurseRecovery = Model.listEkips.Where(t => (t.PositionId == (int)ORPositionEnum.AnesthNurseRecovery) || t.PositionId == 0).Select(c => new SelectListItemCustom()
                                                                        {
                                                                            Selected = (Model.UIdAnesthNurseRecovery == c.Id),
                                                                            Value = c.Id.ToString(),
                                                                            Text = !string.IsNullOrEmpty(c.Name) ? c.Name + " (" + c.Username + ")" : c.Name,
                                                                            itemsHtmlAttributes = new Dictionary<string, string> { { "Email", c.Email }, { "Phone", c.Phone }, { "Position", c.PositionName } }
                                                                        }).ToList();

                                                                        @Html.Raw(Html.DropDownListForCustomExt("UIdAnesthNurseRecovery", dataAnesthNurseRecovery, new { @class = "form-control select2 select2-offscreen", tabindex = "6", onchange = "ChangeAnesthNurseRecovery(this);" }))
                                                                        @Html.ValidationMessageFor(x => x.UIdAnesthNurseRecovery)
                                                                    }
                                                                </td>
                                                                <td class="sub_col col-sm-3" style="text-align:left;">
                                                                    @Html.TextBoxFor(x => x.EmailAnesthNurseRecovery, new { @class = "form-control", @onchange = "editEmailOrPhone(this,'email');", @onkeyup = "editEmailOrPhone(this,'email');" })
                                                                </td>
                                                                <td class="sub_col col-sm-3" style="text-align:left;">
                                                                    @Html.TextBoxFor(x => x.PhoneAnesthNurseRecovery, new { @class = "form-control", @onchange = "editEmailOrPhone(this,'phone');", @onkeyup = "editEmailOrPhone(this,'phone');" })
                                                                </td>
                                                            </tr>
                                                        </tbody>
                                                    </table>

                                                </div>
                                                <div class="row">
                                                    <label style="color:red;font-style:italic">(Thông tin màu đỏ là thông tin bắt buộc phải có)</label>
                                                </div>


                                            </p>
                                        </address>
                                    </div>

                                </div>

                                <div class="row" style="margin-top:10px;">
                                    <div class="col-sm-12">
                                        <div class="form-group relative not_input_error not_input_error_popup" style="margin-top:0px;">
                                            <span id="err_msg" class="field-validation-error" style="display: none;left:0px;"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="btn-wrapper text-right">
                                    @if ((Model.State == (int)ORProgressStateEnum.CancelAnesthManager) || Constant.ListStateAllowCoordinator.Contains(Model.State) || (Model.State == 0 && actionType == 2))
                                    {
                                        if (actionType != 2 && (Model.State == 0 || Model.State == (int)ORProgressStateEnum.Registor || Model.State == (int)ORProgressStateEnum.AssignEkip))
                                        {
                                            <button class="btn btn-accept" id="btnAssignPosition" tabindex="8"><i class="fa fa-save"></i>&nbsp;@LayoutResource.OR_AssignPosition</button>
                                        }
                                        <button class="btn btn-success" tabindex="61" id="btnSaveData"><i class="fa fa-save"></i>&nbsp; Ghi nhận ekip</button>
                                    }
                                    <a href="@Url.Action("SearchAnesthRole", "OR")" tabindex="63" class="btn btn-warning" style="padding-right:4px;"><i class="fa fa-undo"></i>&nbsp; Quay lại</a>
                                </div>

                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @*</form>*@
</div>
<!--Modal to choose charge-->
<div class="modal fade" id="chargesModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" style="margin-top:150px;" role="document">
        <div class="modal-content">
            <div class="modal-header" style="padding-top: 8px;">
                <h5 class="modal-title" id="surgeryModalLongTitle" style="float:left;width:75%;margin-top: 5px;">Chọn chỉ định</h5>
                <div style="float:right;width:20%;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="margin-top: 0px;">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            </div>
            <div class="modal-body">
                <div class="row" id="modal_block_charges">
                    <div class="col-lg-2">
                        Dịch vụ:
                    </div>
                    <div class="col-lg-10">
                        <select name="PatientService" class="form-control" id="PatientService">
                            @if (string.IsNullOrEmpty(Model.ChargeDetailId) && Model.Charges != null) // & Model.Data.ListServices != null
                            {
                                foreach (var item in Model.Charges)
                                {
                                    //vutv7
                                    @*<option value="@item.OrderID//@item.ItemCode//@item.ChargeDetailId//@item.DepartmentCode//@item.LocationName">@item.ItemName</option>*@
                                    <option value="@item.OrderID//@item.ItemCode//@item.ChargeDetailId//@item.DepartmentCode//@item.LocationName//@item.ServiceType//@item.ChargeDate//@item.ItemName//@item.ChargeBy">@item.ItemName</option>
                                }
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-close"></i> Đóng</button>
                <button type="button" class="btn btn-success" id="btnApproveEkip"><i class="fa fa-check-circle"></i> Ghi nhận ekip</button>
            </div>
        </div>
    </div>
</div>
<!--Vutv7 Modal to choose charge replace-->
<div class="modal fade" id="chargesReplaceModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" style="margin-top:150px;" role="document">
        <div class="modal-content">
            <div class="modal-header" style="padding-top: 8px;">
                <h5 class="modal-title" id="surgeryModalLongTitle" style="float:left;width:75%;margin-top: 5px;">Chọn chỉ định thay thế</h5>
                <div style="float:right;width:20%;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="margin-top: 0px;">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            </div>
            <div class="modal-body">
                <div class="row" id="modal_block_charges">
                    <div class="col-lg-2">
                        Dịch vụ:
                    </div>
                    <div class="col-lg-10">
                        <select name="PatientServiceReplace" class="form-control" id="PatientServiceReplace">
                            @if (Model.ChargesReplace != null && Model.ChargesReplace.Count() > 0) // & Model.Data.ListServices != null
                            {
                                foreach (var item in Model.ChargesReplace)
                                {
                                    //var itemText = item.ItemName + " (" + item.ChargeDate.ToString("dd/MM/yyyy HH:mm") + " - " + item.ChargeBy + ")";
                                    <option value="@item.OrderID//@item.ItemCode//@item.ChargeDetailId//@item.DepartmentCode//@item.LocationName//@item.ServiceType//@item.ChargeDate//@item.ItemName//@item.ChargeBy">@item.ItemName</option>
                                }
                            }
                        </select>
                        <div class="row" style="margin-top: 45px;">
                            <div class="col-lg-4">
                                <label>Thời gian chỉ định</label>
                                <span id="text-chargeDate"></span>
                            </div>
                            <div class="col-lg-3">
                                <label>Người chỉ định</label>
                                <span id="text-chargeBy"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-close"></i> Đóng</button>
                <button type="button" class="btn btn-success" id="btnApproveEkipReplace"><i class="fa fa-check-circle"></i> Ghi nhận ekip</button>
            </div>
        </div>
    </div>
</div>
@Html.Partial("_PopupConfirmDeleteEkipInfo")
@section styles{
    @Styles.Render("~/styles_searchfrm")
}
@Scripts.Render("~/javas_searchfrm")
@section scripts{
    <script>
        var Id = '@Model.Id';
        var siteRedirect = '@Url.Action("SearchAnesthRole", "OR")' + '?siteId=' + '@Model.HospitalCode';
        @*'&kw=' + '@HttpUtility.UrlDecode(Model.PId)';*@
        $(function () {
            pageManager.init();
            $('#UIdMainAnesthDoctor').select2({ allowClear: false})
            $('#UIdSubAnesthDoctor').select2({ placeholder: "Chọn người phụ trách", allowClear: true})
            $('#UIdAnesthNurse1').select2({ allowClear: false})
            $('#UIdAnesthNurse2').select2({ placeholder: "Chọn người phụ trách", allowClear: true })
            $('#UIdAnesthNurseRecovery').select2({ placeholder: "Chọn người phụ trách", allowClear: true })
            $('#UIdSubAnesthDoctor2').select2({ placeholder: "Chọn người phụ trách", allowClear: true })
            $('#UIdAnesthesiologist').select2({ placeholder: "Chọn người phụ trách", allowClear: true })
        });
        function Validate(UserId) {
            if (typeof UserId === "undefined") {
                return;
            }
            var postData = new Array();
            postData.push({ name: 'Id', value: Id });
            postData.push({ name: 'UId', value: UserId });
            ShowOverlay(true);
            commonUtils.postAjaxWithToken("/OR/CheckExistPositionByScheduler/", postData, function (response) {
                HideOverlay();
                if (response != null) {
                    if (response.ID == 0) {
                        $("#err_msg").html('Thành viên ekip vừa chọn đã là thành viên trong ekip khác với khung thời gian trên').show();
                    } else {
                        $("#err_msg").html('').hide();
                    }
                }
            });
        }

        function ChangeMainAnesthDoctor() {
            var ddlUser = $('#UIdMainAnesthDoctor').find('option:selected');
            if (ddlUser != undefined) {
                var email = ddlUser.attr('email');
                var phone = ddlUser.attr('phone');
                $('#PhoneMainAnesthDoctor').val(phone);
                $('#EmailMainAnesthDoctor').val(email);
                //suggest trung thoi gian mo
                Validate(ddlUser.val());

            }
        }
        function ChangeAnesthNurse1() {
            var ddlUser = $('#UIdAnesthNurse1').find('option:selected');
            if (ddlUser != undefined) {
                var email = ddlUser.attr('email');
                var phone = ddlUser.attr('phone');
                $('#PhoneAnesthNurse1').val(phone);
                $('#EmailAnesthNurse1').val(email);
                //suggest trung thoi gian mo
                Validate(ddlUser.val());
            }
        }
        function ChangeAnesthNurse2() {
            var ddlUser = $('#UIdAnesthNurse2').find('option:selected');
            if (ddlUser != undefined) {
                var email = ddlUser.attr('email');
                var phone = ddlUser.attr('phone');
                $('#PhoneAnesthNurse2').val(phone);
                $('#EmailAnesthNurse2').val(email);
                //suggest trung thoi gian mo
                Validate(ddlUser.val());
            }
        }
        function ChangeAnesthNurseRecovery() {
            var ddlUser = $('#UIdAnesthNurseRecovery').find('option:selected');
            if (ddlUser != undefined) {
                var email = ddlUser.attr('email');
                var phone = ddlUser.attr('phone');
                $('#PhoneAnesthNurseRecovery').val(phone);
                $('#EmailAnesthNurseRecovery').val(email);
                //suggest trung thoi gian mo
                Validate(ddlUser.val());
            }
        }
        function ChangeSubAnesthDoctor() {
            var ddlUser = $('#UIdSubAnesthDoctor').find('option:selected');
            if (ddlUser != undefined) {
                var email = ddlUser.attr('email');
                var phone = ddlUser.attr('phone');
                $('#PhoneSubAnesthDoctor').val(phone);
                $('#EmailSubAnesthDoctor').val(email);
                //suggest trung thoi gian mo
                Validate(ddlUser.val());
            }
        }
        function ChangeSubAnesthDoctor2() {
            var ddlUser = $('#UIdSubAnesthDoctor2').find('option:selected');
            if (ddlUser != undefined) {
                var email = ddlUser.attr('email');
                var phone = ddlUser.attr('phone');
                $('#PhoneSubAnesthDoctor2').val(phone);
                $('#EmailSubAnesthDoctor2').val(email);
                //suggest trung thoi gian mo
                Validate(ddlUser.val());
            }
        }
        function ChangeAnesthesiologist() {
            var ddlUser = $('#UIdAnesthesiologist').find('option:selected');
            if (ddlUser != undefined) {
                var email = ddlUser.attr('email');
                var phone = ddlUser.attr('phone');
                $('#PhoneAnesthesiologist').val(phone);
                $('#EmailAnesthesiologist').val(email);
                //suggest trung thoi gian mo
                Validate(ddlUser.val());
            }
        }
        var pageManager = {
            init: function () {
                $("#btnAssignPosition").click(pageManager.SaveORAnesth);
                $("#btnSaveData").click(pageManager.SaveORAnesth);
                $("#btnApproveEkip").click(pageManager.SaveORAnesth);
                $('[data-event=delete-item]').click(pageManager.onShowPopupDelete);
                $('#notice_delete_item .btn-submit').click(pageManager.handlerActiveEvent);
                $('#notice_delete_item .btn-cancel').click(pageManager.hidePopup);
                $("#btnApproveEkipReplace").click(pageManager.SaveORAnesth);
            },
            onShowPopupDelete: function () {
                var name = $(this).data('name');
                var content = $(this).data('content');
                var box = $('#notice_delete_item');
                $('#notice_delete_item .btn-submit').attr('data-id', $(this).data('id'));
                $('#notice_delete_item .user_fullname').text(name);
                $('#notice_delete_item .user_email').text(content);
                box.modal('show');
            },
            hidePopup: function () {
                $(this).closest('.modal_booking').find('.close').trigger('click');
            },
            handlerActiveEvent: function () {
                var postData = new Array();
                var id = $(this).data('id');
                postData.push({ name: 'Id', value: id });
                ShowOverlay(true);
                commonUtils.postAjaxWithToken('/OR/DeleteAnesthEkip/', postData, function (ret) {
                    if ((ret.ID > 0)) {
                        ShowNotify('success', 'Xóa thông tin thành công', 5000);
                        window.location.reload();
                    }
                    else {
                        ShowNotify('error', 'Xóa thông tin thất bại', 5000);
                    }
                    HideOverlay();
                });
            },
            SaveORAnesth: function (e) {

                var email = $('#EmailMainAnesthDoctor').val();
                if (!email) {
                    $("#err_msg").html("Bạn chưa chọn thông tin bác sĩ gây mê hoặc địa chỉ email bác sĩ gây chưa cấu hình").show();
                    return false;
                }
                var email = $('#EmailAnesthNurse1').val();
                if (!email) {
                    $("#err_msg").html("Bạn chưa chọn thông tin điều dưỡng gây mê hoặc địa chỉ email điều dưỡng gây chưa cấu hình").show();
                    return false;
                }
                var typeId = 5;
                var state = '@(Model.State == 0 || Model.State == 1 || Model.State == 3 || Model.State == 33)' == 'True' ? typeId : @Model.State;
                state = this.id == 'btnAssignPosition' ? 33 : state;
                //vutv7
                if ($("#checkExprireMonth").val() == 'True' && this.id != 'btnApproveEkipReplace') {
                    var message = "Chỉ định cho ca mổ này đã vượt quá 2 tháng cho phép để ghi nhận doanh thu theo quy định.";
                    ShowNotify('error', message, 5000);
                    $("#err_msg").css('display', 'inline-block');
                    $("#err_msg").html(message).show();
                    if ($("#ChargesReplaceCount").val() != "0") {
                        $('#chargesReplaceModal').modal({ backdrop: 'static', keyboard: false });
                        //show thông tin thời gian và người chỉ định trên popup
                        var arrService = $('#PatientServiceReplace').val().split('//');
                        var date = new Date(arrService[6]);
                        var chargeDate = date.getDate().toString().padStart(2, '0') + "/" + (date.getMonth() + 1).toString().padStart(2, '0') + "/" + date.getFullYear().toString().padStart(4, '0') + " " + date.getHours().toString().padStart(2, '0') + ":" + date.getMinutes().toString().padStart(2, '0') ;
                        var chargeBy = arrService[8];
                        $('#text-chargeDate').text(chargeDate);
                        $('#text-chargeBy').text(chargeBy);
                    }
                    return false;
                }
                if (this.id == 'btnApproveEkip') {
                    if ($('#chargesModal').is(':visible') && $('#PatientService').val() !=null) {
                        var arrService = $('#PatientService').val().split('//');
                        var orderId = arrService[0];
                        var chargeid = arrService[2];
                        var departmentCode = arrService[3];
                        var locationName = arrService[4];
                        //vutv7
                        var chargeDate = arrService[6];
                        var chargeBy = arrService[8];
                        $('#ChargeDetailId').val(chargeid);
                        $('#OrderID').val(orderId);
                        $('#DepartmentCode').val(departmentCode);
                        $('#AdmissionWard').val(locationName);
                        //vutv7
                        $('#ChargeDate').val(chargeDate);
                        $('#ChargeBy').val(chargeBy);
                    }
                }
                //vutv7
                if (this.id == 'btnApproveEkipReplace') {
                    if ($('#chargesReplaceModal').is(':visible') && $('#PatientServiceReplace').val() != null) {
                        var arrService = $('#PatientServiceReplace').val().split('//');
                        var orderId = arrService[0];
                        var chargeid = arrService[2];
                        var departmentCode = arrService[3];
                        var locationName = arrService[4];
                        //vutv7
                        var chargeDate = arrService[6];
                        var chargeBy = arrService[8];
                        $('#ChargeDetailId').val(chargeid);
                        $('#OrderID').val(orderId);
                        $('#DepartmentCode').val(departmentCode);
                        $('#AdmissionWard').val(locationName);
                        //vutv7
                        $('#ChargeDate').val(chargeDate);
                        $('#ChargeBy').val(chargeBy);
                    }
                }

                if ($('#ChargeDetailId').val() == "" && this.id == 'btnSaveData') {
                    $('#chargesModal').modal({ backdrop: 'static', keyboard: false });
                    return false;
                }
                var postData = new Array();
                postData.push({ name: 'UIdMainAnesthDoctor', value: $('#UIdMainAnesthDoctor').val() });
                postData.push({ name: 'UIdSubAnesthDoctor', value: ($('#UIdSubAnesthDoctor').val() != null) ? $('#UIdSubAnesthDoctor').val() : -1 });
                postData.push({ name: 'UIdAnesthNurse1', value: $('#UIdAnesthNurse1').val() });
                postData.push({ name: 'UIdAnesthNurse2', value: ($('#UIdAnesthNurse2').val() != null) ? $('#UIdAnesthNurse2').val() : -1 });
                postData.push({ name: 'UIdAnesthNurseRecovery', value: ($('#UIdAnesthNurseRecovery').val() != null) ? $('#UIdAnesthNurseRecovery').val() : -1 });

                postData.push({ name: 'EmailMainAnesthDoctor', value: $('#EmailMainAnesthDoctor').val() });
                postData.push({ name: 'EmailSubAnesthDoctor', value: $('#EmailSubAnesthDoctor').val() });
                postData.push({ name: 'EmailAnesthNurse1', value: $('#EmailAnesthNurse1').val() });
                postData.push({ name: 'EmailAnesthNurse2', value: $('#EmailAnesthNurse2').val() });
                postData.push({ name: 'EmailAnesthNurseRecovery', value: $('#EmailAnesthNurseRecovery').val() });

                postData.push({ name: 'PhoneMainAnesthDoctor', value: $('#PhoneMainAnesthDoctor').val() });
                postData.push({ name: 'PhoneSubAnesthDoctor', value: $('#PhoneSubAnesthDoctor').val() });
                postData.push({ name: 'PhoneAnesthNurse1', value: $('#PhoneAnesthNurse1').val() });
                postData.push({ name: 'PhoneAnesthNurse2', value: $('#PhoneAnesthNurse2').val() });
                postData.push({ name: 'PhoneAnesthNurseRecovery', value: $('#PhoneAnesthNurseRecovery').val() });
                //vutv7
                postData.push({ name: 'UIdSubAnesthDoctor2', value: ($('#UIdSubAnesthDoctor2').val() != null) ? $('#UIdSubAnesthDoctor2').val() : -1 });
                postData.push({ name: 'EmailSubAnesthDoctor2', value: $('#EmailSubAnesthDoctor2').val() });
                postData.push({ name: 'PhoneSubAnesthDoctor2', value: $('#PhoneSubAnesthDoctor2').val() });

                postData.push({ name: 'UIdAnesthesiologist', value: ($('#UIdAnesthesiologist').val() != null) ? $('#UIdAnesthesiologist').val() : -1 });
                postData.push({ name: 'EmailAnesthesiologist', value: $('#EmailAnesthesiologist').val() });
                postData.push({ name: 'PhoneAnesthesiologist', value: $('#PhoneAnesthesiologist').val() });

                postData.push({ name: 'State', value: state });

                postData.push({ name: 'Id', value: $('#Id').val() });
                postData.push({ name: 'PId', value: $('#PId').val() });
                postData.push({ name: 'AnesthDescription', value: $('#AnesthDescription').val() });
                postData.push({ name: 'surgeryType', value: $('input[name="surgeryType"]:checked').val() });
                postData.push({ name: 'ChargeDetailId', value: $('#ChargeDetailId').val() });
                postData.push({ name: 'OrderID', value: $('#OrderID').val() });
                postData.push({ name: 'DepartmentCode', value: $('#DepartmentCode').val() });
                postData.push({ name: 'AdmissionWard', value: $('#AdmissionWard').val() });
                postData.push({ name: 'actionType', value: @actionType });
                postData.push({ name: 'ChargeDate', value: $('#ChargeDate').val() });
                postData.push({ name: 'ChargeBy', value: $('#ChargeBy').val() });
                ShowOverlay(true);
                commonUtils.postAjaxWithToken("/OR/SaveORAnesthByJson/", postData, function (response) {
                    HideOverlay();
                    if (response != null) {
                        if (response.ID > 0) {
                            ShowNotify('success', 'Lưu thông tin thành công', 1000);
                            if (@actionType== 2) {
                                window.location.href = siteRedirect + '&State=0&&kw=' + $('#PId').val();
                            }
                            else {
                                window.location.href = siteRedirect;
                            }
                        }
                        else {
                            if (response.ID == -1001171) {
                                ShowNotify('warning', response.Message, 5000);
                                $('#chargesModal').modal({backdrop: 'static', keyboard: false});
                                return false;
                            } else {
                                ShowNotify('error', response.Message, 5000);
                                $("#err_msg").css('display', 'inline-block');
                                $("#err_msg").html(response.Message).show();
                            }
                        }
                    }
                });
            }
        }
        $('option').each(function () {
            var optionText = this.text;
            if (optionText.length > 75) {
                var newOption = optionText.substring(0, 75);
                $(this).text(newOption + '...');
            }
        });
        //vutv7
        $('#PatientServiceReplace').on('change', function () {
            //show thông tin thời gian và người chỉ định trên popup
            var arrService = $('#PatientServiceReplace').val().split('//');
            var date = new Date(arrService[6]);
            var chargeDate = date.getDate().toString().padStart(2, '0') + "/" + (date.getMonth() + 1).toString().padStart(2, '0') + "/" + date.getFullYear().toString().padStart(4, '0') + " " + date.getHours().toString().padStart(2, '0') + ":" + date.getMinutes().toString().padStart(2, '0');
            var chargeBy = arrService[8];
            $('#text-chargeDate').text(chargeDate);
            $('#text-chargeBy').text(chargeBy);
        });
    </script>
}




