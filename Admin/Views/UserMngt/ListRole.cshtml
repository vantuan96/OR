@using Contract.AdminAction
@using Contract.User
@model List<AdminRoleContract>
@{
    ViewBag.Title = LayoutResource.UserMngt_ListRole_PageTitle;
    var listGroupAction = ViewBag.ListGroupAction as List<AdminGroupActionContract>;
}

<div id="main_wrapper">
    <div class="page_bar clearfix">
        <div class="row">
            <div class="col-md-6">
                <div class="">
                    <h1 class="page_title">@LayoutResource.UserMngt_ListRole_PageTitle</h1>
                </div>
            </div>
            <div class="col-md-6 text-right">
                <div class="div_add_fast">
                    @if (Functions.CheckAllowAction("UserMngt", "CreateUpdateRole"))
                    {
                        @Html.CreateToPopupBtn(text: LayoutResource.UserMngt_BtnText_CreateRole, href: Url.Action("CreateUpdateRole", "UserMngt"))
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="page_content">
        <div class="bg_page_fix"><i class="fa fa-users"></i></div>
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-12">
                                    @if (Model != null && Model.Count > 0)
                                    {
                                        <div class="table-responsive">
                                            <table class="table table-striped info-table margin_b0 table_booking table_week">
                                                <thead>
                                                    <tr>
                                                        <th style="max-width: 90px;width:60px" class="sub_col">@LayoutResource.Shared_Label_SortNumber</th>
                                                        <th class="sub_col">@LayoutResource.UserMngt_ListRole_Label_RoleName</th>
                                                        <th class="sub_col">@LayoutResource.UserMngt_ListRole_Label_Sort</th>
                                                        <th class="sub_col" style="max-width: 160px;width:160px"></th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @{ int rownumber = 0; }
                                                    @foreach (var item in Model.OrderBy(r => r.Sort))
                                                    {
                                                        <tr>
                                                            <td class="text-right">
                                                                <span>@(++rownumber)</span>
                                                            </td>
                                                            <td>@item.RoleName</td>
                                                            <td>@item.Sort</td>
                                                            <td class="text-center">
                                                                

                                                                @if (Functions.CheckAllowAction("UserMngt", "UpdateRoleGroupActionMap"))
                                                                {
                                                                    <button class="btn btn-success" onclick="UpdateRoleGroupActionMap(@item.RoleId, '@item.RoleName')">
                                                                        <i class="fa fa-share-alt"></i>
                                                                    </button>
                                                                }
                                                                @if (Functions.CheckAllowAction("UserMngt", "CreateUpdateRole"))
                                                                {
                                                                    @Html.EditToPopupBtn(href: Url.Action("CreateUpdateRole", "UserMngt", new { id = item.RoleId }))
                                                                }

                                                                @if (Functions.CheckAllowAction("UserMngt", "DeleteRole"))
                                                                {
                                                                    @Html.DeleteBtn(isShowLoading: false, href: "javascript:DeleteRole(" + item.RoleId + ")");
                                                                }
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                        }
                                        else
                                        {
                                            @Html.Partial("_ErrorOccur", LayoutResource.Shared_NoRowFound)
                                        }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade modal_booking" id="modalMapping" aria-hidden="true" data-backdrop="static" style="display: none;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>
                <h2 class="modal-title title-popup">@LayoutResource.UserMngt_ListRole_PageTitle</h2>
                <br />
            </div>
            <div class="modal-body">
                <div class="body_booking">
                    <div class="row">
                        <div class="col-md-12">
                            <strong class="rolename"></strong>
                        </div>
                    </div>

                    <div class="row listGroupAction">
                        @foreach (var group in listGroupAction.OrderBy(x=>x.Name))
                        {
                            <div class="col-md-4">
                                <label>
                                    <input type="checkbox" name="groupId" value="@group.GaId" />
                                    @group.Name @(string.IsNullOrEmpty(group.Description) ? "" : "(" + group.Description + ")")
                                </label>
                            </div>
                        }
                    </div>

                    <div class="row">
                        <div class="col-md-12 text-right">
                            <button class="btn btn-accept" type="button" onclick="UpdateRoleGroupActionMapSubmit()"><i class="fa fa-save"></i>&nbsp;@LayoutResource.Shared_BtnText_Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section styles {
    <style type="text/css">
        .listGroupAction {
            max-height: 500px; 
            overflow: auto; 
        }
        .listGroupAction label {
            font-weight: normal;
            cursor: pointer;
        }
    </style>    
}

@section scripts {
    <script type="text/javascript">
        var deleteRoleUrl = '@Url.Action("DeleteRole")';
        var updateRoleGroupActionMapUrl = '@Url.Action("UpdateRoleGroupActionMap")';
        var currentRoleId = 0;
        
        function DeleteRole(id) {
            bootbox.confirm({
                title: layout_lang.Shared_PopupConfirmTitle,
                message: msg_lang.UserMngt_ListRole_DeleteRoleConfirmText,
                callback: function (confirm) {
                    if (confirm) {
                        ShowOverlay(true);
                        $.post(deleteRoleUrl, { id: id }, function (result) {
                            if (result.ID == 1) {
                                ReloadWithMasterDB();
                            }
                            else {
                                ShowNotify('error', result.Message);
                                HideOverlay();
                            }
                        });
                    }
                }
            });
        }

        function UpdateRoleGroupActionMap(roleId, roleName)
        {
            currentRoleId = roleId;
            $('.rolename').text(roleName);
            ShowOverlay(true);

            $.get(updateRoleGroupActionMapUrl, { roleId: roleId }, function (listGroup) {
                $('input[name="groupId"]').prop('checked', false);

                $(listGroup).each(function () {
                    var group = this;
                    $('input[name="groupId"][value=' + group.GaId + ']').prop('checked', true);
                });

                $('#modalMapping').modal('toggle');
                HideOverlay();
            });
        }

        function UpdateRoleGroupActionMapSubmit()
        {
            var listgroup = [];
            $('input[name="groupId"]:checked').each(function() {
                listgroup.push($(this).val());
            });

            ShowOverlay(true);
            
            $.post(updateRoleGroupActionMapUrl, { roleId: currentRoleId, listGroupId: listgroup }, function (ret) {
                if (ret.ID == 1) 
                    window.location.reload();
                else 
                    ShowNotify('error', ret.Message);

                HideOverlay();
            });
        }
    </script>
}