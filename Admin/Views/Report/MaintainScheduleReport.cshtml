@model System.Data.DataTable
@using Admin.Models.Report
@{
    ViewBag.Title = LayoutResource.Report_MaintainScheduleReport_PageTitle;



    var listPnL = new List<SelectListItem>();
    listPnL = (List<SelectListItem>)ViewBag.ListPnL;

    var listSite = new List<SelectListItem>();
    var listSiteJSON = (string)ViewBag.ListSiteJSON;

    var listDept = new List<SelectListItem>();
    listDept = (List<SelectListItem>)ViewBag.ListDept;

    var fromdate = ViewBag.FromDate.ToString(StringHelper.DateShortFormat);
    var todate = ViewBag.ToDate.ToString(StringHelper.DateShortFormat);
    var hidenFromdate = ViewBag.FromDate.ToString(StringHelper.EnglishDateShortFormat);
    var hidenTodate = ViewBag.ToDate.ToString(StringHelper.EnglishDateShortFormat);
    int maxColumnIndex = 0;
    int startColumnIndex = 6;
    int year = ((DateTime)ViewBag.FromDate).Year;
    List<WeekInfoModel> weekInfo = (List<WeekInfoModel>)ViewBag.WeekInfo;
}
@section styles{
    @Styles.Render("~/styles_searchfrm")
    <style>

        table.table.table-striped>thead>tr>th {
            height: 25px;
            background-color:#dbdbdb;
        }
    </style>
}
<div id="main_wrapper">
    <div class="page_bar clearfix">
        <div class="row">
            <div class="col-md-12">
                <div class="">
                    <h1 class="page_title">@LayoutResource.Report_MaintainScheduleReport_PageTitle</h1>
                    <span class="text-muted"></span>
                </div>
            </div>
        </div>
    </div>
    <div class="page_content">
        <div class="container-fluid">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12">
                            @Html.AntiForgeryToken()
                            <form action="@Url.Action("MaintainScheduleReport", "Report")" method="get" onsubmit="return ValidateForm();">
                                <div class="row">
                                    <div class="col-sm-4">
                                        <label>@LayoutResource.Report_MaintainScheduleReport_SelectPnL</label>
                                        @Html.DropDownList("ddlPnL", listPnL, new
                                       {
                                           @class = "form-control select2 select2-offscreen", tabindex = "1"
                                       })
                                    </div>

                                    <div class="col-sm-4">
                                        <label>@LayoutResource.Report_MaintainScheduleReport_SelectBranch</label>
                                        @Html.DropDownList("ddlSite", listSite, new
                                       {
                                           @class = "form-control select2 select2-offscreen", tabindex = "2"
                                       })
                                    </div>                                  
                                    
                                    <div class="col-sm-4">
                                        <label>@LayoutResource.Report_MaintainScheduleReport_SelectDept</label>
                                        @Html.DropDownList("ddlDept", listDept, new
                                           {
                                               @class = "form-control select2 select2-offscreen"    , tabindex = "3"                                   
                                           })
                                    </div>
                                    
                                </div>
                                <div class="row">
                                    <div class="col-sm-4">
                                        <label>@LayoutResource.Report_MaintainScheduleReport_SelectYear</label>
                                        <select tabindex="4" name="year" id="ddlYear" class="form-control select2-offscreen select2-nosearch">
                                            @for(int i = 0; i<100; i++)
                                            {
                                                <option @(year==(DateTime.Now.Year-i) ? "selected='selected'":"") value="@(DateTime.Now.Year-i)">@(DateTime.Now.Year-i)</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="col-sm-4">
                                        <label>@LayoutResource.Shared_FromDateLabel</label>
                                        <input id="from_date" tabindex = "5" class="form-control" value="@fromdate" data-date-format="@Extension.DateShortFormatJS" data-date-autoclose="true" />
                                        <input id="hidden_from_date" type="hidden" class="fromDateHidden form-control" value="@hidenFromdate" name="fromDate" />
                                        <input id="hidden_to_date" type="hidden" class="fromDateHidden form-control" value="@hidenTodate" name="toDate" />
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="input-group">
                                            <label>                                                
                                                @LayoutResource.Shared_ToDateLabel
                                            </label>                                            
                                            <input tabindex="6" id="to_date" class="form-control" value="@todate" data-date-format="@Extension.DateShortFormatJS" data-date-autoclose="true"/>
                                            <span class="input-group-btn">
                                                <label>&nbsp; </label>
                                                @*<button title="@LayoutResource.CMS_ButtonText_ClearFilter" tabindex="100"
                                                        class="Tip_mouse_on_ne btn btn-danger btn-search" style="" id="clearFilter">
                                                    <i class="fa fa-remove"></i>
                                                </button>*@
                                                <button id="view" type="submit" class="btn btn-master btn-search"><i class="fa fa-search"></i></button>
                                                @if (Model != null && Model.Rows.Count > 0)
                                                {
                                                    <button type="submit" class="btn btn-search btn-success linkURL" 
                                                            formtarget="_blank" name="export" value="True" tabindex="7"
                                                            onclick="HideOverlay(4000)"><i class="fa fa-file-excel-o"></i></button>
                                                }
                                            </span>
                                        </div>                                                                     
                                     </div>                         
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="panel-heading">@LayoutResource.Report_MaintainScheduleReport_ScheduleList</div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12">
                            @if (Model != null && Model.Rows.Count > 0)
                            {
                                maxColumnIndex = Model.Columns.IndexOf("PlanID1");
                                var weekyear = (from t in weekInfo
                                                group t by new { t.Year }
                                                                               into grp
                                                select new
                                                {
                                                    grp.Key.Year,
                                                    Count = grp.Count()
                                                }).ToList();
                                var width = 500 + (40 * weekyear.Sum(x => x.Count));
                                <div class="table-responsive">
                                    <table id="tbData" class="table table-striped info-table margin_b0 table_booking table_week" style="max-width:@(width)px;width:@(width)px">
                                        <thead>
                                            <tr>
                                                <th class="sub_col" colspan="3" rowspan="2">@LayoutResource.Report_MaintainScheduleReport_PlanInfo</th>
                                                @{ 
                                                   
                                                    foreach (var item in weekyear)
                                                    {
                                                        <th class="sub_col" colspan="@item.Count">@LayoutResource.Shared_YearLabel @item.Year</th>
                                                    }
                                                }
                                            </tr>
                                            <tr>
                                                
                                                    @if (Model != null && Model.Rows.Count > 0)
                                                    {
                                                        //List<int> monthWeeks = new List<int>();
                                                        //for (int i = startColumnIndex; i < maxColumnIndex; i++)
                                                        //{
                                                        //    var weeks = int.Parse(Model.Columns[i].ToString().ToLower().Replace("t", ""));
                                                        //    var month = Extension.MonthOfWeek(weeks, year);
                                                        //    monthWeeks.Add(month);
                                                        //}

                                                        var weekmonth = (from t in weekInfo
                                                                            group t by new { t.Year, t.Month }
                                                                                into grp
                                                                            select new
                                                                            {
                                                                                grp.Key.Year,
                                                                                grp.Key.Month,
                                                                                Count = grp.Count()
                                                                            }).ToList();
                                                        foreach (var item in weekmonth)
                                                        {
                                                            <th class="sub_col" colspan="@item.Count">@LayoutResource.Shared_MonthLabel @item.Month</th>
                                                        }
                                                    }
                                                
                                            </tr>
                                            <tr>                                               
                                                <th class="sub_col">@LayoutResource.Report_MaintainScheduleReport_Content</th>
                                                <th class="sub_col" style="max-width:60px;width:60px">@LayoutResource.Report_MaintainScheduleReport_Quantity</th>
                                                <th class="sub_col" style="max-width:150px;width:150px">@LayoutResource.Report_MaintainScheduleReport_Frequency</th>
                                                @for (int i = startColumnIndex; i < maxColumnIndex; i++)
                                                {
                                                    <th class="sub_col" style="max-width:40px;width:40px">@Model.Columns[i].ColumnName</th>
                                                }
                                            </tr>                                          
                                        </thead>
                                        <tbody>
                                           @foreach (System.Data.DataRow rows in Model.Rows)
                                           {
                                                <tr style="@(rows["PlanID"].ToString().Equals("0")? "background:#eeeeee !important" : "")" >
                                                    @if (rows["PlanID"].ToString().Equals("0"))
                                                    {
                                                        <td class="nostyle" colspan="@(maxColumnIndex-startColumnIndex+3)" style="font-weight:bold">@Html.Raw(rows[0].ToString().Replace(" ","&nbsp;"))</td>
                                                    }
                                                    else
                                                    {
                                                        <td>@Html.Raw(rows["Content"].ToString().Replace(" ", "&nbsp;"))</td>
                                                        <td class="text-right">@Html.Raw(rows["Quantity"].ToString())</td>
                                                        <td style="max-width:150px;width:150px">@Html.Raw(rows["Frequency"].ToString())</td>
                                                        for (int i = startColumnIndex; i < maxColumnIndex; i++)
                                                        {
                                                            <td class="sub_col" style="max-width:40px;width:40px;background-color:@Html.StatusColor(int.Parse(rows[i].ToString()))">
                                                                @if(!rows[i].ToString().Equals("0"))
                                                                {
                                                                    <text>X</text>
                                                                }                                                           
                                                            </td>
                                                        }
                                                    }                                                    
                                                </tr>
                                           }
                                        </tbody>
                                    </table>
                                </div>
                                
                            }
                            else
                            {
                                @Html.Partial("_ErrorOccur", LayoutResource.Shared_NoRowFound)
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section scripts {
    @Scripts.Render("~/javas_searchfrm")

    <script>
        $(function () {
            $("#ddlPnL").focus();

            $("#ddlYear").on("change", function(){
                var year = $(this).val();
                $('#from_date').datepicker('setStartDate', new Date(year,0,1));
                $('#from_date').datepicker('setEndDate', new Date(year,11,31));

                $('#to_date').datepicker('setStartDate', new Date(year,0,1));
                $('#to_date').datepicker('setEndDate', new Date(year,11,31));

                $('#from_date').datepicker('setDate', new Date(year,0,1));
                $('#to_date').datepicker('setDate', new Date(year,11,31));
            });

            if (($('#from_date').length) && ($('#to_date').length)) {
                $('#from_date').datepicker({
                    todayHighlight: true,
                    startDate: new Date(@year,0,1),
                    endDate: moment($('#to_date').val(), '@Extension.DateShortFormatJS.ToUpper()', true).toDate()//new Date(@year,11,31)
                }).on('changeDate', function (e) {
                    $('#to_date').datepicker('setStartDate', e.date);
                    $('#hidden_from_date').val( moment($('#from_date').val(), '@Extension.DateShortFormatJS.ToUpper()', true).format('@Extension.DateSubmitFormatJS.ToUpper()'));
                });
                $('#to_date').datepicker({
                    todayHighlight: true,
                    startDate: moment($('#from_date').val(), '@Extension.DateShortFormatJS.ToUpper()', true).toDate(),//new Date(@year,0,1),
                    endDate: new Date(@year,11,31)
                }).on('changeDate', function (e) {
                    $('#from_date').datepicker('setEndDate', e.date)
                    $('#hidden_to_date').val( moment($('#to_date').val(), '@Extension.DateShortFormatJS.ToUpper()', true).format('@Extension.DateSubmitFormatJS.ToUpper()'));
                });

                $('#from_date,#to_date').keypress(function(event){
                    event.preventDefault();
                    return false;
                });

                $('#from_date,#to_date').bind("cut copy paste",function(e) {
                    e.preventDefault();
                    return false;
                });
            }

            var listSite = jQuery.parseJSON( '@Html.Raw(listSiteJSON)');

            function changePnL(){
                var opts = "";
                var curPnL = $("#ddlPnL").val();
                for (var i = 0; i < listSite.length; i++) {
                    var item = listSite[i];
                    if(curPnL==item.PlanPnLID){
                        var selected = "";
                        if('@Request.Params["ddlSite"]'==item.ID){
                            selected="selected='selected'";
                        }
                        opts += "<option "+selected+" value='"+item.ID+"'>"+item.Name+"</option>";
                    }
                }

                if(opts==""){
                    opts = "<option "+selected+" value='-1'>"+layout_lang.Shared_NoRowFound+"</option>";
                }

                $("#ddlSite").html(opts);
                $("#ddlSite").trigger('change');
            }

            $("#ddlPnL").on('change',function(){
                changePnL();
                $("#ddlSite").val();
            });

            changePnL();

            //Reset table width if < container width
            var curWidth = $("#tbData").css("width").replace("px","");
            if($("#tbData").parent().width()> parseInt(curWidth,10)){
                $("#tbData").css("width",$("#tbData").parent().width()).css("maxWidth",$("#tbData").parent().width());;

            }
        });

        function ValidateForm(){
            if($("#ddlSite").val()==-1)
            {
                HideOverlay(100);
                bootbox.alert(layout_lang.Report_MaintainScheduleReport_RequiredSite);
                return false;
            }
        }
    </script>
}
